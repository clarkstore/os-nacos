#动态路由dataId配置
os:
  nacos:
    gateway:
      route-data-id: os-gateway-router

spring:
  main:
    allow-bean-definition-overriding: true
  cloud:
    gateway:
      discovery:
        locator:
          #表明gateway开启服务注册和发现的功能，并且spring cloud gateway自动根据服务发现为每一个服务创建了一个router，这个router将以服务名开头的请求路径转发到对应的服务。
          enabled: true
          ##是将请求路径上的服务名配置为小写（因为服务注册的时候，向注册中心注册时将服务名转成大写的了），比如以/service-hi/*的请求路径被路由转发到服务名为service-hi的服务上。
          lower-case-service-id: true
#      default-filters:
#        - DedupeResponseHeader=Access-Control-Allow-Origin, RETAIN_UNIQUE
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedHeaders: '*'
            allowedMethods: '*'
            allowedOrigins: '*'
    # sentinel:
    #   enabled: true
    #   #心跳启动
    #   eager: true
    #   # sentinel控制台地址
    #   transport:
    #     dashboard: localhost:5001
    #   # nacos配置持久化
    #   datasource:
    #     gw-flow:
    #       nacos:
    #         server-add: ${spring.cloud.nacos.discovery.server-addr}
    #         data-id: gateway-sentinel-flow
    #         group-id: DEFAULT_GROUP
    #         data-type: json
    #         rule-type: flow
    #     gw-degrade:
    #       nacos:
    #         server-add: ${spring.cloud.nacos.discovery.server-addr}
    #         data-id: gateway-sentinel-degrade
    #         group-id: DEFAULT_GROUP
    #         data-type: json
    #         rule-type: degrade
    #   filter:
    #     enabled: false

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    gateway:
      enabled: true
    health:
      show-details: always